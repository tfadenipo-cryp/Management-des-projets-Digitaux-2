stages:
  - lint
  - typecheck
  - audit
  - test
# Lint
lint:
  stage: lint
  before_script:
    - $env:Path += ";C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2800.0_x64__qbz5n2kfra8p0;"
    - python --version
    - python -m pip install --upgrade pip
    - python -m pip install uv
    - python -m uv sync --frozen
  script:
    # 1. Corrige automatiquement les 6 erreurs F401 (imports inutilisés) dans les fichiers
    - python -m uv run ruff check . --fix
    # 2. Vérifie qu'il ne reste AUCUNE erreur. Si le code est propre, ce job PASSE.
    - python -m uv run ruff check .


# Type checking
typecheck:
  stage: typecheck
  before_script:
    - $env:Path += ";C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2800.0_x64__qbz5n2kfra8p0;"
    - python -m pip install uv
    - python -m uv sync --frozen
  script:
  - python -m uv run mypy src --ignore-missing-imports



# Tests unitaires
pytest:
  stage: test
  before_script:
    - $env:Path += ";C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2800.0_x64__qbz5n2kfra8p0;"
    - python -m pip install uv
    - python -m uv sync --frozen
    - python -m pip install pytest
  script:
    - python -m pytest tests/ --maxfail=1 --disable-warnings -v




# Audit de sécurité
security-audit:
  stage: audit
  before_script:
    - $env:Path += ";C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.12_3.12.2800.0_x64__qbz5n2kfra8p0;"
    - python -m pip install --upgrade uv
    - python -m pip install uv pip-audit
  script:
    # Génère un requirements.txt standard dans le dossier temporaire
    - python -m pip freeze > $env:TEMP\req.txt
    - python -m pip_audit -r $env:TEMP\req.txt

